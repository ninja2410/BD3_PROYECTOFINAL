<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="barButtonItem1.Glyph" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>